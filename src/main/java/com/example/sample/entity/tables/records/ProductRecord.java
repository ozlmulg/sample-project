/*
 * This file is generated by jOOQ.
 */
package com.example.sample.entity.tables.records;


import com.example.sample.entity.tables.Product;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductRecord extends UpdatableRecordImpl<ProductRecord> implements Record6<Long, String, LocalDateTime, LocalDateTime, Integer, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>product.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>product.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>product.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>product.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>product.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>product.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>product.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>product.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>product.version</code>.
     */
    public void setVersion(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>product.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>product.changelog_id</code>.
     */
    public void setChangelogId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>product.changelog_id</code>.
     */
    public UUID getChangelogId() {
        return (UUID) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, LocalDateTime, LocalDateTime, Integer, UUID> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, LocalDateTime, LocalDateTime, Integer, UUID> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Product.PRODUCT.ID;
    }

    @Override
    public Field<String> field2() {
        return Product.PRODUCT.NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Product.PRODUCT.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Product.PRODUCT.UPDATED_AT;
    }

    @Override
    public Field<Integer> field5() {
        return Product.PRODUCT.VERSION;
    }

    @Override
    public Field<UUID> field6() {
        return Product.PRODUCT.CHANGELOG_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdatedAt();
    }

    @Override
    public Integer component5() {
        return getVersion();
    }

    @Override
    public UUID component6() {
        return getChangelogId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdatedAt();
    }

    @Override
    public Integer value5() {
        return getVersion();
    }

    @Override
    public UUID value6() {
        return getChangelogId();
    }

    @Override
    public ProductRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ProductRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProductRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ProductRecord value4(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ProductRecord value5(Integer value) {
        setVersion(value);
        return this;
    }

    @Override
    public ProductRecord value6(UUID value) {
        setChangelogId(value);
        return this;
    }

    @Override
    public ProductRecord values(Long value1, String value2, LocalDateTime value3, LocalDateTime value4, Integer value5, UUID value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductRecord
     */
    public ProductRecord() {
        super(Product.PRODUCT);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(Long id, String name, LocalDateTime createdAt, LocalDateTime updatedAt, Integer version, UUID changelogId) {
        super(Product.PRODUCT);

        setId(id);
        setName(name);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setVersion(version);
        setChangelogId(changelogId);
    }

    /**
     * Create a detached, initialised ProductRecord
     */
    public ProductRecord(com.example.sample.entity.tables.pojos.Product value) {
        super(Product.PRODUCT);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            setVersion(value.getVersion());
            setChangelogId(value.getChangelogId());
        }
    }
}
